#!/usr/bin/env python

import subprocess
import optparse
import re

def get_arguments():
    # Parse command-line arguments to get user input
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="Interface to change MAC address")
    parser.add_option("-m", "--mac", dest="new_mac", help="New MAC address")
    return parser.parse_args()

def change_mac(interface, new_mac):
    # Change the MAC address of the specified interface
    print("[+] Changing MAC address for " + interface + " to " + new_mac)
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])

def get_current_mac(interface):
    try:
        # Get the current MAC address of the specified interface
        ifconfig_result = subprocess.check_output(["ifconfig", interface]).decode()
        mac_address_search_result = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", ifconfig_result)

        if mac_address_search_result:
            return mac_address_search_result.group(0)
        else:
            return "NONE"
    except subprocess.CalledProcessError:
        return "NONE"

# Get user input
(options, arguments) = get_arguments()

# Check if required options are provided
if options.interface is None:
    print("[-] Please specify an interface using -i or --interface option.")
elif options.new_mac is None:
    print("[-] Please specify a new MAC address using -m or --mac option.")
else:
    # Get and print the current MAC address
    current_mac = get_current_mac(options.interface)

    if current_mac != "NONE":
        print("Current MAC Address = " + current_mac)
    else:
        print("[-] Could not find MAC address for interface: " + options.interface + "\nCurrent MAC: NONE")

    # Uncomment the line below to change the MAC address
    # change_mac(options.interface, options.new_mac)

    # Get and print the updated MAC address after attempting to change it
    current_mac = get_current_mac(options.interface)
    if current_mac == options.new_mac:
        print("[+] MAC address was successfully changed to " + current_mac)
    else:
        print("[-] MAC address did not change ")
